"""
Django settings for embermail project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
import logging
from pathlib import Path
from datetime import date
from decouple import config
from embermail.infrastructure.logger.services import (
    CustomisedJSONFormatter,
    RecordDataJSONFormatter,
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG")

ALLOWED_HOSTS = config("ALLOWED_HOSTS").split(",")

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "embermail.domain.users",
    "embermail.domain.campaigns",
    "embermail.domain.payments",
    "embermail.domain.templates",
    "customadmin",
    # Apps.py files for Signals
    "embermail.application.users.apps.ApplicationUsersConfig",
    # Third Party Apps
    "debug_toolbar",
    "widget_tweaks",
    "django_celery_beat",
    "django_celery_results",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "embermail.interface.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

ASGI_APPLICATION = "embermail.drivers.asgi.application"
WSGI_APPLICATION = "embermail.drivers.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": config("DB_ENGINE"),
        "NAME": config("DB_NAME"),
        "USER": config("DB_USER"),
        "PASSWORD": config("DB_PASSWORD"),
        "HOST": config("DB_HOST"),
        "PORT": config("DB_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "embermail/static"),
    os.path.join(BASE_DIR, "customadmin/static"),
]
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "users.User"

LOGIN_URL = "users:onboarding"
LOGIN_REDIRECT_URL = "users:home"
LOGOUT_REDIRECT_URL = "users:onboarding"

BASE_URL = config("BASE_URL")

# CELERY
CELERY_BROKER_URL = config("CELERY_BROKER_URL")
CELERY_RESULT_BACKEND = "django-db"
CELERY_TIMEZONE = TIME_ZONE
CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers:DatabaseScheduler"

# Country ISO Codes
COUNTRY_ISO_CODES_LIST = eval(config("COUNTRY_ISO_CODES_LIST"))

# Sendgrid Configurations
SENDGRID_API_KEY = config("SENDGRID_API_KEY")
SENDGRID_FROM_MAIL = config("SENDGRID_FROM_MAIL")
SENDGRID_FORGOT_PASSWORD_TEMPLATE_KEY = config("SENDGRID_FORGOT_PASSWORD_TEMPLATE_KEY")
SENDGRID_FORGOT_PASSWORD_COMPLETED_TEMPLATE_KEY = config(
    "SENDGRID_FORGOT_PASSWORD_COMPLETED_TEMPLATE_KEY"
)
SENDGRID_VERIFY_EMAIL_TEMPLATE_KEY = config("SENDGRID_VERIFY_EMAIL_TEMPLATE_KEY")
SENDGRID_INVITATION_LINK_TEMPLATE_KEY = config("SENDGRID_INVITATION_LINK_TEMPLATE_KEY")
SENDGRID_REPUTATION_ALERT_TEMPLATE_KEY = config("SENDGRID_REPUTATION_ALERT_TEMPLATE_KEY")

# SMTP Mail Configuration for System Mails
SYSTEM_MAIL_HOST = config("SYSTEM_MAIL_HOST")
SYSTEM_MAIL_ADDRESS = config("SYSTEM_MAIL_ADDRESS")
SYSTEM_MAIL_APP_PASSWORD = config("SYSTEM_MAIL_APP_PASSWORD")

# App Password Encoding
PASSCODE = config("PASSCODE")

# Enable to Send Mails Using SMTP for Warmup
ENABLE_SEND_MAILS_FOR_WARMUP = (
    False if config("ENABLE_SEND_MAILS_FOR_WARMUP") == "0" else True
)

# Main Algorithm Runtime Setting
MAIN_ALGORITHM_RUN_TIME_HOUR = config("MAIN_ALGORITHM_RUN_TIME_HOUR")
MAIN_ALGORITHM_RUN_TIME_MINUTE = config("MAIN_ALGORITHM_RUN_TIME_MINUTE")
MAX_TIME_TO_COMPLETE_ALGORITHM = config("MAX_TIME_TO_COMPLETE_ALGORITHM")

# Stripe Configuration
STRIPE_API_KEY = config("STRIPE_API_KEY")
STRIPE_WEBHOOK_SECRET = config("STRIPE_WEBHOOK_SECRET")
STRIPE_LIVE_SECRET_KEY = config("STRIPE_LIVE_SECRET_KEY", "<your secret key>")

# Gmail/Outlook SIgn In Options Links
GMAIL_SIGN_IN_LINK = config("GMAIL_SIGN_IN_LINK")
GMAIL_IMAP_ACCESS_LINK = config("GMAIL_IMAP_ACCESS_LINK")
GMAIL_TWO_STEP_VERIFICATION = config("GMAIL_TWO_STEP_VERIFICATION")
GMAIL_APP_PASSWORD = config("GMAIL_APP_PASSWORD")
OUTLOOK_SIGN_IN_LINK = config("OUTLOOK_SIGN_IN_LINK")
OUTLOOK_IMAP_ACCESS_LINK = config("OUTLOOK_IMAP_ACCESS_LINK")
OUTLOOK_TWO_STEP_VERIFICATION = config("OUTLOOK_TWO_STEP_VERIFICATION")
OUTLOOK_APP_PASSWORD = config("OUTLOOK_APP_PASSWORD")

# SQL Debugging Toolbar
DEBUG_TOOLBAR_PANELS = [
    "debug_toolbar.panels.history.HistoryPanel",
    "debug_toolbar.panels.versions.VersionsPanel",
    "debug_toolbar.panels.timer.TimerPanel",
    "debug_toolbar.panels.settings.SettingsPanel",
    "debug_toolbar.panels.headers.HeadersPanel",
    "debug_toolbar.panels.request.RequestPanel",
    "debug_toolbar.panels.sql.SQLPanel",
    "debug_toolbar.panels.staticfiles.StaticFilesPanel",
    "debug_toolbar.panels.templates.TemplatesPanel",
    "debug_toolbar.panels.cache.CachePanel",
    "debug_toolbar.panels.signals.SignalsPanel",
    "debug_toolbar.panels.redirects.RedirectsPanel",
    "debug_toolbar.panels.profiling.ProfilingPanel",
]
INTERNAL_IPS = [
    "127.0.0.1",
]

# Logger Setting
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "json": {
            "()": CustomisedJSONFormatter,
        },
        "record_data": {
            "()": RecordDataJSONFormatter,
        },
    },
    "handlers": {
        "debug_file": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": f"logs/debug/{date.today()}_logger.log",
            "formatter": "json",
        },
        "info_file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": f"logs/info/{date.today()}_info.log",
            "formatter": "json",
        },
        "warn_file": {
            "level": "WARNING",
            "class": "logging.FileHandler",
            "filename": f"logs/warning/{date.today()}_warn.log",
            "formatter": "json",
        },
        "error_file": {
            "level": "ERROR",
            "class": "logging.FileHandler",
            "filename": f"logs/error/{date.today()}_error.log",
            "formatter": "json",
        },
        "record_file": {
            "level": "FATAL",
            "class": "logging.FileHandler",
            "filename": f"logs/records/{date.today()}_records.log",
            "formatter": "record_data",
        },
    },
    "loggers": {
        "": {
            "handlers": ["debug_file", "info_file", "warn_file", "error_file"],
            "level": "DEBUG",
            "propagate": False,
        },
        "record_logger": {
            "handlers": [
                "record_file",
            ],
            "level": "INFO",
            "propagate": False,
        },
    },
}
